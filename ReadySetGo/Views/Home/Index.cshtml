@model HomeModel

<style>

    body, html {
        height: 100%;
    }

    html {
        overflow: hidden;
    }

    body {
        overflow: scroll;
    }

    .container {
        max-width: 800px;
    }

    .bg {
        /*background-image: url("http://assets.readysetgo.click/RSG-1.jpg");*/
        background-image: url("http://assets.readysetgo.click/Shihad30-1.jpg");
        height: 100%;
        background-position: center;
        background-repeat: no-repeat;
        background-size: cover;
    }

    .headerLine {
        font-family: 'Roboto', sans-serif; 
        font-size: 60px;
        font-weight: 900;
    }

    .formContainer {
        width: 100%;
    }

    @@media screen and (max-width: 1150px) {
        label {
            width: 100%;
            padding-top: 10px;
        }

        .formSpacer {
            width: 100%;
        }
    }
    
    .inputDetails {
        padding-top: 20px;
    }
    
    .songName {
        padding: 5px 20px 5px 10px;
        margin: 0;
    }

    span.left {
        float: left;
    }

    span.right {
        float: right;
    }

    table.playlist {
        width: 50%;
        border: 5px solid #D3D3D3;
    }

    @@media screen and (max-width: 1150px) {
        table.playlist {
            width: 100%;
        }

        .spotify {
            width: 100%;
        }

        .goButton {
            display: block;
            padding-top: 10px;
        }
    }
    
    .table-striped > tbody > tr:nth-of-type(odd) {
        background-color: #f9f9f9;
    }
    
    .table-striped > tbody > tr:nth-of-type(even) {
        background-color: #fff;
    }

    tr {
        opacity: 0.9;
    }
    
    th, td {
        valign: middle;
        opacity: 0.8;
    }

    td.songName {
        width: 75%;
    }

    td.songCount {
        width: 25%;
    }

    .formSpacer {
        padding-left: 20px;
    }

    .songCount {
        text-align: center;
    }

    .fa-circle-o-notch {
        display: none;
    }

    .showLoader {
        display: inline-block;
    }
    
</style>
<script>
    function getSetlist() {
        var loader = document.getElementById("setlistLoader");
        loader.className += " showLoader";
    }
    function getSpotify() {
        var loader = document.getElementById("spotifyLoader");
        loader.className += " showLoader";
    }
</script>
<div class="headerLine">ReadySetGo</div>
<div>Choose an artist to get a setlist of the songs most likely to be played at their next gig - then generate a playlist for that set in your Spotify account.</div>
<div class="inputDetails">
@{
    using (Html.BeginForm("Post", "Home", FormMethod.Post))
    {
        <div class="formContainer">
        
            <label for="txtArtist">Artist Name</label>
            @Html.TextBoxFor(m => m.ArtistName, new { id = "txtArtist" })
            <span class="formSpacer"></span>
        
            <label for="txtMaxConcerts">Previous concerts to consider</label>
            @Html.TextBoxFor(m => m.ConcertCount, new { id = "txtMaxConcerts" })
            <span class="formSpacer"></span>
        
            <span class="goButton">
                <button type="submit" class="btn btn-success" onclick="getSetlist();">Go</button>
                <i id="setlistLoader" class="fa fa-circle-o-notch fa-spin" style="font-size:14px;"></i>
            </span>
        
            @if (Model.ArtistFound.HasValue && Model.ArtistFound.Value == false) {
                <p>
                    No artist found with that name!
                </p>
            }

            @if (Model.SongsFound.HasValue && Model.SongsFound.Value == false) {
                <p>
                    No songs found!
                </p>
            }
        
        </div>
    }
}
</div>

@if (Model.SongsFound.HasValue && Model.SongsFound.Value == true) {

    <hr />  
    <div class="outputDetails">
        <p>
            Here's a setlist of songs @Model.ArtistName might play, based on the last @Model.ActualCount concerts 
            @(Model.ActualCount < Model.ConcertCount ? "(that's all there is!)" : ""):
        </p>
    
        @using (Html.BeginForm("Spotify", "Home", FormMethod.Post))
        {
            <div class="spotify">
                <span class="left">
                    <button type="submit" class="btn btn-success" onclick="getSpotify();">Create Spotify Playlist</button>
                    <i id="spotifyLoader" class="fa fa-circle-o-notch fa-spin" style="font-size:14px"></i>
                </span>

                @if (!string.IsNullOrWhiteSpace(Model.Url))
                {
                    <span class="right">Playlist created! Here you go: <a target="_blank" href=@Model.Url> @Model.ArtistName </a> </span>
                }
            </div>
        }
        <div style="clear: both;"></div>
        <br />

        <table class="playlist table-striped">
            <tr>
                <th class="songName">Song Name</th>
                <th class="songCount">Times Played</th>
            </tr>
            
            @foreach (var song in Model.Songs) {
            
            <tr>
                <td class="songName">@song.Name</td>
                <td class="songCount">@(song.DuplicateCount + 1) / @Model.ActualCount</td>
            </tr>
            
            }
        </table>
    </div>
}